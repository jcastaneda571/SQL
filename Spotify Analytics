# For this project, I downloaded Spotify data from Kaggle.
# Then I created a table to insert Spotify data into.
# Finally, I performed analytics on the data using SQL. 

#Creating the table: 
CREATE TABLE BIT_DB.Spotifydata (
id integer PRIMARY KEY,
artist_name varchar NOT NULL,
track_name varchar NOT NULL,
track_id varchar NOT NULL,
popularity integer NOT NULL,
danceability decimal(4,3) NOT NULL,
energy decimal(4,3) NOT NULL,
key integer NOT NULL,
loudness decimal(5,3) NOT NULL,
mode integer NOT NULL,
speechiness decimal(5,4) NOT NULL,
acousticness decimal(6,5) NOT NULL,
instrumentalness text NOT NULL,
liveness decimal(5,4) NOT NULL,
valence decimal(4,3) NOT NULL,
tempo decimal(6,3) NOT NULL,
duration_ms integer NOT NULL,
time_signature integer NOT NULL 
)

#Then I inserted the Spotify Data .csv into the table.

#Next, I explored the data using the following SQL.

#1.) What is the average danceability by artist and track? 
select artist_name, sum(danceability)/count(artist_name) as avg_danceability 
from BIT_DB.Spotifydata
group by artist_name
order by avg_danceability desc;


#2.) Who are the top 10 artist based on popularity?
Select artist_name, avg(popularity) as popularity
From BIT_DB.Spotifydata
group by artist_name
order by popularity desc limit 10;


#3.) What artist released the longest song?
Select artist_name, duration_ms
from BIT_DB.Spotifydata
order by duration_ms desc limit 1;


#4.) What is the average tempo of tracks grouped by artist? 
Select artist_name, avg(tempo)
from BIT_DB.Spotifydata
group by artist_name;


#5.) Which track and artist has the highest energy level?
select artist_name, track_name, max(energy) as energy
from BIT_DB.Spotifydata
group by artist_name
order by energy desc limit 1;


#6.) What's the average danceability for the 10 most popular songs?
  SELECT AVG(danceability) AS avg_danceability
FROM BIT_DB.Spotifydata
where danceability
in (SELECT danceability
    FROM BIT_DB.Spotifydata
    ORDER BY popularity DESC
    LIMIT 10
);
